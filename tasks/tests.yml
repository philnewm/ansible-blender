---

- name: Gather package facts
  ansible.builtin.package_facts:

- name: Test installed dependencies
  loop: "{{ blender_dependencies[ansible_os_family] }}"
  ansible.builtin.assert:
    that: item in ansible_facts.packages
    fail_msg: "Failed to find package {{ item }} in instaleld packages"
    quiet: true

- name: Get blender install
  ansible.builtin.stat:
    path: "{{ blender_install_path }}"
  register: blender_path

- name: Test install path
  ansible.builtin.assert:
    that:
      - blender_path.stat.isdir
    quiet: true

- name: Check if blender is available
  ansible.builtin.command:
    cmd: "blender --version"
  register: blender_command
  changed_when: false

- name: Test blender command
  ansible.builtin.assert:
    that:
      - blender_command.rc == 0
    fail_msg: "Blender command failed"
    quiet: true

- name: Get blender tar-ball
  ansible.builtin.stat:
    path: "/opt/blender-{{ version_long }}-linux-{{ architecture }}.tar.xz"
  register: blender_tar_ball

- name: Test tar-ball removed
  ansible.builtin.assert:
    that:
      - not blender_tar_ball.stat.exists
    fail_msg: "Blender tar-ball was not removed"
    quiet: true

- name: Get blender symlink
  ansible.builtin.stat:
    path: "{{ user_symlink_path }}/blender"
  register: blender_symlink

- name: Test symlink
  ansible.builtin.assert:
    that:
      - blender_symlink.stat.exists
      - blender_symlink.stat.islnk
      - blender_symlink.stat.lnk_source == blender_install_path + '/blender'
    fail_msg: "Blender symlink stats are not as expected, found {{ blender_symlink.stat.lnk_source }}"
    quiet: true

- name: Get blender desktop launcher
  ansible.builtin.stat:
    path: "{{ desktop_launcher_path }}/blender.desktop"
  register: blender_desktop

- name: Test desktop launcher
  ansible.builtin.assert:
    that:
      - blender_desktop.stat.exists
    fail_msg: "Blender desktop file does not exist"
    quiet: true

...
